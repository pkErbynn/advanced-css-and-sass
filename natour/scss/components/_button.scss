.btn {
    &, // not just apply to anchor btn but general button element
    &:visited,
    &:link
    {
        text-transform: uppercase;
        /* remove link format */
        text-decoration: none;
        padding: 1.5rem 4rem;
        display: inline-block;
        /* big radius to auto round corners */
        border-radius: 40rem;
        
        /* applied on initial state....more, google for transition property */
        transition-property: transform; /*the hover prop to affect*/
        transition-duration: .2s;
        /* combined */
        /* transition: transform .2s;   */
        
        /* reference to hide btn behine */
        position: relative;
    
        /* unique font */
        font-size: $default-font-size;

        // change for <button> element
        cursor: pointer;
        border: none;
    }

    &:hover {
        transform: translateY(-3px);
        box-shadow: 0 1rem 2rem rgba(0, 0, 0, .2);

        /* child element take effect when btn hovered */
        &::after {
            transform: scaleX(1.4) scaleY(1.6);
            /* fades out the wave */
            opacity: 0;
        }
    }
    
    /* when clicked */
    &:active,
    &:focus {
        outline: none;
        transform: translateY(-1px);
        box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .2);
    }
    
    &--white {
        background-color: $color-white;
        color: $color-grey-dark;

        &::after {
            background-color: $color-white;
        }
    }
    
    &--green {
        background-color: $color-primary;
        color: $color-white;

        &::after {
            background-color: $color-primary;
        }
    }
    
    /* after - like child element */
    &::after {
        content: "";
        display: inline-block;
        height: 100%;
        width: 100%;
    
        /* bigger px to meet curve */
        border-radius: 20rem;
    
        /* stay behind original need reference */
        position: absolute;
        top: 0;
        left: 0;
        /* stay behind */
        z-index: -1;
    
        /* triggers >> .btn:hover::after  */
        transition: all .4s;
    }

    &--animation {
        /* animation: name, duration, timing-function, delay */
        animation: moveFromBottom .5s ease-out .7s;
    
        /* prevent button being visible before animation happens */
        /* applies styles in zero % before animation starts */
        animation-fill-mode: backwards;
    }
    
}


.btn-text {
    &:link,
    &:visited {
        font-size: $default-font-size;
        color: $color-primary;
        display: inline-block;
        text-decoration: none;  // remove underline
        border-bottom: 1px solid $color-primary;    // custom underline
        padding: 3px;
        transition: all .2s;
    }

    &:hover {
        background-color: $color-primary;
        color: $color-white;
        box-shadow: 0 1rem 2rem rgba($color-black, .15);
        transform: translateY(-2px);    // raise the btn
    }

    &:active {
        box-shadow: 0 .5rem 1rem rgba($color-black, .15);
        transform: translateY(0);   // btn settles to normal
    }
}
.navigation {
    &__checkbox {
        display: none;
    }

    &__button {
        background-color: $color-white;
        height: 7rem;
        width: 7rem;
        position: fixed;
        top: 6rem;
        right: 6rem;
        border-radius: 50%;
        z-index: 2000;
        box-shadow: 0 1rem 3rem rgba($color-black, .1);
        text-align: center;
        cursor: pointer;

        // moving btn to the corner cus it displaced a bit
        @include respond(tab-port) {
            top: 4rem;
            right: 4rem;
        }

        @include respond(phone) {
            top: 3rem;
            right: 3rem;
        }
    }

    // green bg that spans across the entire page
    &__background {
        // creating circle
        height: 6rem;
        width: 6rem;
        border-radius: 50%;

        position: fixed;    // fixed position at corner
        top: 6.5rem;
        right: 6.5rem;
        background-image: radial-gradient($color-primary-light, $color-primary-dark);   // unlike linear gradient moving from left to right, this moves from center to outer
        z-index: 1000;  // works well when position is specified at #37
        transition: transform .8s cubic-bezier(0.86, 0, 0.07, 1);

        // btn nav diplacement fix
        @include respond(tab-port) {
            top: 4.5rem;
            right: 4.5rem;
        }

        @include respond(phone) {
            top: 3.5rem;
            right: 3.5rem;
        }
    }

    &__nav {
        height: 100vh;
        position: fixed;
        top: 0;
        left: 0;
        z-index: 1500;

        opacity: 0;
        width: 0;
        transition: all .8s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }

    &__list {
        // center list content in container
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%,-50%);
        list-style: none;
        text-align: center;
        width: 100%;
    }

    &__item {
        margin: 1rem;
    }

    &__link {
        &:link,
        &:visited {
            display: inline-block;
            font-size: 3rem;
            font-weight: 300; // thin dark text 
            padding: 1rem 2rem;
            color: $color-white;
            text-decoration: none;
            text-transform: uppercase;
            background-image: linear-gradient(120deg, transparent 0%, transparent 50%, $color-white 50%);
            background-size: 220%;
            transition: all .4s;

            span {
                margin-right: 1.5rem;
                display: inline-block;
            }
        }
        
        &:hover,
        &:active {
            background-position: 100%;
            color: $color-primary;
            transform: translateX(1rem);
        }
    }


    // //FUNCTIONALITY
    &__checkbox:checked ~ &__background {
        transform: scale(80);
    }

    &__checkbox:checked ~ &__nav {
        opacity: 1;
        width: 100%;
    }


    // //ICON
    &__icon {
        position: relative;
        margin-top: 3.5rem;

    // creating 3 elements using before, actual and after
        &,
        &::before,
        &::after {
            // dash line creation
            width: 3rem;
            height: 2px;
            background-color: $color-grey-dark-3;
            display: inline-block;
        }

        // specify content of before and after before they appear
        &::before,
        &::after {
            content: "";
            position: absolute;  // before and after dashes, positioned in relation to the actual at line #124
            left: 0; // both stays at corner
            transition: all .2s;    // transition on the original...takes place on hover #152
        }

        &::before { top: -.8rem; } // stays on top
        &::after { top: .8rem; }    // stays down
    }

    // as button is hovered, select its child element and position that one('before') only
    &__button:hover &__icon::before {
        top: -1rem;
    }

    // similar to the down btn
    &__button:hover &__icon::after {
        top: 1rem;
    }

    // when box is checked, select its adjacent element and on that element, select its child element...and then disappear it
    &__checkbox:checked + &__button &__icon {
        background-color: transparent;
    }

    // similarly, when box is checked, then select its adjacent element and on that element, select its child element, then on that, its pseudo element...and then rotate it
    &__checkbox:checked + &__button &__icon::before {
        top: 0;
        transform: rotate(135deg);
    }

    // in the same vein as this, but rotate in opp dxn to form an "X"
    &__checkbox:checked + &__button &__icon::after {
        top: 0;
        transform: rotate(-135deg);
    }
}